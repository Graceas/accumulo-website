<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache Accumulo™</title>
    <description>The Apache Accumulo™ sorted, distributed key/value store is a robust, scalable, high performance data storage and retrieval system.
</description>
    <link>https://accumulo.apache.org/</link>
    <atom:link href="https://accumulo.apache.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 05 Aug 2019 19:49:40 -0400</pubDate>
    <lastBuildDate>Mon, 05 Aug 2019 19:49:40 -0400</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
    
      <item>
        <title>Apache Accumulo 2.0.0</title>
        <description>&lt;p&gt;Apache Accumulo 2.0.0 contains significant changes from 1.9 and earlier
versions. It is the first major release since adopting &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;semver&lt;/a&gt; and is the
culmination of more than 3 years worth of work by more than 40 contributors
from the Accumulo community. The following release notes highlight some of the
changes. If anything is missing from this list, please &lt;a href=&quot;/contact-us&quot;&gt;contact&lt;/a&gt; the developers
to have it included.&lt;/p&gt;

&lt;h2 id=&quot;notable-changes&quot;&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id=&quot;new-api-for-creating-connections-to-accumulo&quot;&gt;New API for creating connections to Accumulo&lt;/h3&gt;

&lt;p&gt;A fluent API for creating Accumulo clients was introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4784&quot;&gt;ACCUMULO-4784&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/634&quot;&gt;#634&lt;/a&gt;.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;Connector&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ZooKeeperInstance&lt;/code&gt; objects have been deprecated and replaced by
&lt;code class=&quot;highlighter-rouge&quot;&gt;AccumuloClient&lt;/code&gt; which is created from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Accumulo&lt;/code&gt; entry point. The new API also deprecates
&lt;code class=&quot;highlighter-rouge&quot;&gt;ClientConfiguration&lt;/code&gt; and introduces its own properties file called &lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo-client.properties&lt;/code&gt;
that ships with the Accumulo tarball. The new API has the following benefits over the old API:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;All connection information can be specifed in properties file to create the client. This was not
possible with old API.&lt;/li&gt;
  &lt;li&gt;The new API does not require &lt;code class=&quot;highlighter-rouge&quot;&gt;ZooKeeperInstance&lt;/code&gt; to be created first before creating a client.&lt;/li&gt;
  &lt;li&gt;The new client is closeable and does not rely on shared static resource management&lt;/li&gt;
  &lt;li&gt;Clients can be created using a new Java builder, &lt;code class=&quot;highlighter-rouge&quot;&gt;Properties&lt;/code&gt; object, or &lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo-client.properties&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Clients can now be created with default settings for &lt;code class=&quot;highlighter-rouge&quot;&gt;BatchWriter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Scanner&lt;/code&gt;, etc.&lt;/li&gt;
  &lt;li&gt;Create scanners with default authorizations. &lt;a href=&quot;https://github.com/apache/accumulo/issues/744&quot;&gt;#744 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the &lt;a href=&quot;/docs/2.x/getting-started/clients&quot;&gt;client documentation&lt;/a&gt; for more information on how to use the new API.&lt;/p&gt;

&lt;h3 id=&quot;hadoop-3-java-8--11&quot;&gt;Hadoop 3 Java 8 &amp;amp; 11.&lt;/h3&gt;

&lt;p&gt;Accumulo 2.x expects at least Java 8 and Hadoop 3.  It is built against Java 8
and Hadoop 3 and the binary tarball is targeted to work with a Java 8 and
Hadoop 3 system.  See &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4826&quot;&gt;ACCUMULO-4826 &lt;/a&gt;,  &lt;a href=&quot;https://github.com/apache/accumulo/issues/531&quot;&gt;#531 &lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4299&quot;&gt;ACCUMULO-4299 &lt;/a&gt;.  Running with Java 11 is also supported, but Java 11 is not
required.&lt;/p&gt;

&lt;h3 id=&quot;simplified-accumulo-scripts-and-configuration-files&quot;&gt;Simplified Accumulo scripts and configuration files&lt;/h3&gt;

&lt;p&gt;Accumulo’s scripts and configuration were refactored in &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4490&quot;&gt;ACCUMULO-4490&lt;/a&gt; to make Accumulo
easier to use. The number of scripts in the &lt;code class=&quot;highlighter-rouge&quot;&gt;bin&lt;/code&gt; directory of the Accumulo release tarball
has been reduced from 20 scripts to the four scripts below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo&lt;/code&gt; - mostly left alone except for improved usage&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo-service&lt;/code&gt; - manage Accumulo processes as services&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo-cluster&lt;/code&gt; - manage Accumulo on cluster. Replaces &lt;code class=&quot;highlighter-rouge&quot;&gt;start-all.sh&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;stop-all.sh&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo-util&lt;/code&gt; - combines many utility scripts into one script.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read &lt;a href=&quot;/blog/2016/11/16/simpler-scripts-and-config.html&quot;&gt;this blog post&lt;/a&gt; for more information on this change.&lt;/p&gt;

&lt;h3 id=&quot;new-bulk-import-api&quot;&gt;New Bulk Import API&lt;/h3&gt;

&lt;p&gt;A new bulk import API was added in 2.0 that has very different implementation.  This new API supports the following new functionality.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bulk import to an offline table.&lt;/li&gt;
  &lt;li&gt;Load plans that specify where files go in a table which avoids opening the
files for inspection.&lt;/li&gt;
  &lt;li&gt;Inspection of file on the client side. Inspection of all files is done
before the FATE operation starts.  This results in less namenode operations
and fail-fast for bad files (no longer need a fail directory).&lt;/li&gt;
  &lt;li&gt;A new improved algorithm to load files into tablets.  This new algorithm
scans the metadata table and makes asynchronous load calls to all tablets.
This queues load operations on all tablets at around the same time.  The
async RPC calls and beforehand inspection make the bulk load FATE operation
much shorter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The shell command for doing bulk load supports the old and new API.  To use the
new API from the shell simply omit the failure directory argument.
For the API, use the &lt;a href=&quot;https://static.javadoc.io/org.apache.accumulo/accumulo-core/2.0.0/org/apache/accumulo/core/client/admin/TableOperations.html#importDirectory(java.lang.String)&quot;&gt;new fluent API&lt;/a&gt;.
See &lt;a href=&quot;https://github.com/apache/accumulo/issues/436&quot;&gt;#436 &lt;/a&gt;, &lt;a href=&quot;https://github.com/apache/accumulo/issues/472&quot;&gt;#472 &lt;/a&gt;, and &lt;a href=&quot;https://github.com/apache/accumulo/issues/570&quot;&gt;#570 &lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;summaries&quot;&gt;Summaries&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/docs/2.x/development/summaries&quot;&gt;Summaries&lt;/a&gt; enables continually generating
statistics about a table with user defined functions.  This feature can inform
a user about what is in their table and be used by compaction strategies to
make decisions.  For example, using this feature it would be possible to
compact all tablets where deletes are more than 25% of the data. Another
example use case is optimizing filtering compactions by enabling smart
selection of files with pertinent data. Examples of filtering compactions are
age off and removal of non-compliant data.&lt;/p&gt;

&lt;h3 id=&quot;scan-executors&quot;&gt;Scan Executors&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/docs/2.x/administration/scan-executors&quot;&gt;Scan executors&lt;/a&gt; support prioritizing
and dedicating scan resources. Each executor has a configurable number of
threads and an optional custom prioritizer.  Tables can be configured in a
flexible way to dispatch scans to different executors.&lt;/p&gt;

&lt;h3 id=&quot;spi-package&quot;&gt;SPI package&lt;/h3&gt;

&lt;p&gt;All new pluggable components introduced in 2.0 were placed under a new SPI
package.  The SPI package is analyzed by &lt;a href=&quot;https://code.revelc.net/apilyzer-maven-plugin/&quot;&gt;Apilyzer&lt;/a&gt; at build time to ensure
plugins only use SPI and API types.  This prevents plugins from using internal
Accumulo types that are inherently unstable over time.  Plugins created before
2.0 do use internal types and are less stable.  The new pluggable interfaces
should be much more stable.&lt;/p&gt;

&lt;h3 id=&quot;official-accumulo-docker-image-was-created&quot;&gt;Official Accumulo docker image was created&lt;/h3&gt;

&lt;p&gt;An &lt;a href=&quot;https://github.com/apache/accumulo-docker&quot;&gt;official Accumulo docker images&lt;/a&gt; was created in &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4706&quot;&gt;ACCUMULO-4706&lt;/a&gt; to make
it easier for users to run Accumulo in Docker. To support running in Docker, a few changes were
made to Accumulo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;--upload-accumulo-site&lt;/code&gt; option was added to &lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo init&lt;/code&gt; to set properties in accumulo-site.xml
to Zookeeper during initialization.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;-o &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; option was added to the &lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo&lt;/code&gt; command to override configuration that could
not be set in Zookeeper.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;updated-and-improved-accumulo-documentation&quot;&gt;Updated and improved Accumulo documentation&lt;/h3&gt;

&lt;p&gt;Accumulo’s documentation has been refactored with the following improvements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation source now lives in &lt;a href=&quot;https://github.com/apache/accumulo-website&quot;&gt;accumulo-website repo&lt;/a&gt; so changes
are now immediately viewable.&lt;/li&gt;
  &lt;li&gt;Improved navigation using a new sidebar&lt;/li&gt;
  &lt;li&gt;Better linking to Javadocs, between documentation pages, and to configuration properties.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Accumulo’s documentation was also reviewed and changes were made to improve accuracy and remove
out of date documentation.&lt;/p&gt;

&lt;h3 id=&quot;moved-accumulo-examples-to-its-own-repo&quot;&gt;Moved Accumulo Examples to its own repo&lt;/h3&gt;

&lt;p&gt;The Accumulo examples were moved out the accumulo repo to the &lt;a href=&quot;https://github.com/apache/accumulo-examples&quot;&gt;accumulo-examples repo&lt;/a&gt;
which has the following benefits:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Accumulo examples are no longer released with Accumulo and can be continuously improved.&lt;/li&gt;
  &lt;li&gt;The Accumulo API version used by the examples can be updated right before Accumulo is released
to test for any changes to the API that break semver.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;simplified-accumulo-logging-configuration&quot;&gt;Simplified Accumulo logging configuration&lt;/h3&gt;

&lt;p&gt;The log4j configuration of Accumulo services was improved in &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4588&quot;&gt;ACCUMULO-4588&lt;/a&gt; with the following changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Logging is now configured using standard log4j JVM property ‘log4j.configuration’ in accumulo-env.sh.&lt;/li&gt;
  &lt;li&gt;Tarball ships with fewer log4j config files (3 rather than 6) which are all log4j properties files.&lt;/li&gt;
  &lt;li&gt;Log4j XML can still be used by editing accumulo-env.sh&lt;/li&gt;
  &lt;li&gt;Removed auditLog.xml and added audit log configuration to log4j-service properties files&lt;/li&gt;
  &lt;li&gt;Accumulo conf/ directory no longer has an examples/ directory. Configuration files ship in conf/ and are
used by default.&lt;/li&gt;
  &lt;li&gt;Accumulo monitor by default will bind to 0.0.0.0 but will advertise hostname looked up in Java for log
forwarding&lt;/li&gt;
  &lt;li&gt;Switched to use full hostnames rather than short hostnames for logging&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;removed-comparison-of-value-with-byte-in-valueequals&quot;&gt;Removed comparison of Value with byte[] in Value.equals()&lt;/h3&gt;

&lt;p&gt;Replaced the ability to use &lt;code class=&quot;highlighter-rouge&quot;&gt;Value.equals(byte[])&lt;/code&gt; to check if the contents of a
&lt;code class=&quot;highlighter-rouge&quot;&gt;Value&lt;/code&gt; object was equal to a given byte array in &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4726&quot;&gt;ACCUMULO-4726&lt;/a&gt;. To perform
that check, you must now use the newly added &lt;code class=&quot;highlighter-rouge&quot;&gt;Value.contentEquals(byte[])&lt;/code&gt;
method. This corrects the behavior of the &lt;code class=&quot;highlighter-rouge&quot;&gt;equals&lt;/code&gt; method so that it conforms
to the API contract documented in the javadoc inherited from its superclass.
However, it will break any code that was relying on the undocumented and broken
behavior to compare &lt;code class=&quot;highlighter-rouge&quot;&gt;Value&lt;/code&gt; objects with byte arrays. Such comparisons will now
always return &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, even if the contents are equal.&lt;/p&gt;

&lt;h3 id=&quot;other-notable-changes&quot;&gt;Other Notable Changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-3652&quot;&gt;ACCUMULO-3652&lt;/a&gt; - Replaced string concatenation in log statements with slf4j
where applicable. Removed tserver TLevel logging class.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4449&quot;&gt;ACCUMULO-4449&lt;/a&gt; - Removed ‘slave’ terminology and replaced with ‘tserver’ in
most cases. The former ‘slaves’ config file is now named ‘tservers’. Added checks to
scripts to fail if ‘slaves’ file is present.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4808&quot;&gt;ACCUMULO-4808 &lt;/a&gt; - Can now create table with splits and offline.  Specifying splits
at table creation time can be much faster than adding splits after creation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4463&quot;&gt;ACCUMULO-4463 &lt;/a&gt; - Caching is now pluggable.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4177&quot;&gt;ACCUMULO-4177 &lt;/a&gt; - New built in cache implementation based on TinyLFU.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4376&quot;&gt;ACCUMULO-4376 &lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4746&quot;&gt;ACCUMULO-4746 &lt;/a&gt; - Mutation and Key Fluent APIs allow easy mixing of types.  For example a family of type &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt; and qualifier of type &lt;code class=&quot;highlighter-rouge&quot;&gt;byte[]&lt;/code&gt; is much easier to write using this new API.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4771&quot;&gt;ACCUMULO-4771 &lt;/a&gt; - The Accumulo monitor was completely rewritten.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4732&quot;&gt;ACCUMULO-4732 &lt;/a&gt; - Specify iterators and locality groups at table creation time.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4612&quot;&gt;ACCUMULO-4612 &lt;/a&gt; - Use percentages for memory related configuration.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-1787&quot;&gt;ACCUMULO-1787 &lt;/a&gt; - Two tier compaction strategy.  Support compacting small files with snappy and large files with gzip.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/560&quot;&gt;#560 &lt;/a&gt; - Provide new Crypto interface &amp;amp; impl&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/536&quot;&gt;#536 &lt;/a&gt; - Removed mock Accumulo.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/438&quot;&gt;#438 &lt;/a&gt; - Added support for ZStandard compression&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/404&quot;&gt;#404 &lt;/a&gt; - Added basic Grafana dashboard example.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/1102&quot;&gt;#1102 &lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/1100&quot;&gt;#1100 &lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/1037&quot;&gt;#1037 &lt;/a&gt; - Removed lock contention in different areas.  These locks caused threads working unrelated task to impede each other.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/1033&quot;&gt;#1033 &lt;/a&gt; - Optimized the default compaction strategy.  In some cases the Accumulo would rewrite data O(N^2) times over repeated compactions.  With this change the amount of rewriting is always logarithmic.&lt;/li&gt;
  &lt;li&gt;Many performance improvements mentioned in the 1.9.X release notes are also available in 2.0.&lt;/li&gt;
  &lt;li&gt;Scanners close server side sessions on close &lt;a href=&quot;https://github.com/apache/accumulo/issues/813&quot;&gt;#813 &lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/905&quot;&gt;#905 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upgrading&quot;&gt;Upgrading&lt;/h2&gt;

&lt;p&gt;View the &lt;a href=&quot;/docs/2.x/administration/upgrading&quot;&gt;Upgrading Accumulo documentation&lt;/a&gt; for guidance.&lt;/p&gt;

</description>
        <pubDate>Fri, 02 Aug 2019 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/release/accumulo-2.0.0/</link>
        <guid isPermaLink="true">https://accumulo.apache.org/release/accumulo-2.0.0/</guid>
        
        
        <category>release</category>
        
      </item>
    
      <item>
        <title>Using Apache Spark with Accumulo</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://spark.apache.org/&quot;&gt;Apache Spark&lt;/a&gt; applications can read from and write to Accumulo tables.  To
get started using Spark with Accumulo, checkout the &lt;a href=&quot;/docs/2.x/development/spark&quot;&gt;Spark documentation&lt;/a&gt; in
the 2.0 Accumulo user manual. The &lt;a href=&quot;https://github.com/apache/accumulo-examples/tree/master/spark&quot;&gt;Spark example&lt;/a&gt; application is a good starting point
for using Spark with Accumulo.&lt;/p&gt;

</description>
        <pubDate>Wed, 24 Apr 2019 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/blog/2019/04/24/using-spark-with-accumulo.html</link>
        <guid isPermaLink="true">https://accumulo.apache.org/blog/2019/04/24/using-spark-with-accumulo.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Apache Accumulo 1.9.3</title>
        <description>&lt;p&gt;Apache Accumulo 1.9.3 contains bug fixes for Write Ahead Logs and compaction.
Users of 1.9.2 are encouraged to upgrade.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/accumulo_user_manual.html&quot;&gt;User Manual&lt;/a&gt; - In-depth developer and administrator documentation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/apidocs/&quot;&gt;Javadocs&lt;/a&gt; - Accumulo 1.9 API&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/examples/&quot;&gt;Examples&lt;/a&gt; - Code with corresponding readme files that give step by
step instructions for running example code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notable-changes&quot;&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id=&quot;multiple-fixes-for-write-ahead-logs&quot;&gt;Multiple Fixes for Write Ahead Logs&lt;/h3&gt;

&lt;p&gt;This release fixes Write Ahead Logs issues that slow or prevent recovery
and in some cases lead to data loss. The fixes reduce the number of WALS
referenced by a tserver, improve error handing, and improve clean up.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Eliminates a race condition that could result in data loss during recovery.
If the GC deletes unreferenced WALs from ZK while the master is reading
recovery WALs from ZK, the master may skip WALs it should not, resulting in
data loss.  Fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/866&quot;&gt;#866&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Opening a new WAL in DFS may fail, but still be advertised in ZK. This could
result in a missing WAL during recovery, preventing tablets from loading.
There is no data loss in this case, just WAL references that should not exists.
Reported in &lt;a href=&quot;https://github.com/apache/accumulo/issues/949&quot;&gt;#949&lt;/a&gt; and fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/1057&quot;&gt;#1005&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;tserver failures could result in many empty WALs that unnecessarily slow recovery.
This was fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/845&quot;&gt;#823&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some write patterns caused tservers to unnecessarily reference a lot of WALs,
which could slow any recovery.  In &lt;a href=&quot;https://github.com/apache/accumulo/issues/860&quot;&gt;#854&lt;/a&gt; the max WALs referenced was
limited regardless of the write pattern, avoiding long recovery times.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;During tablet recovery, filter out logs that do not define the tablet. &lt;a href=&quot;https://github.com/apache/accumulo/issues/881&quot;&gt;#881&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If a tserver fails sorting, a marker file is written to the recovery directory.
This marker prevents any subsequent recovery attempts from succeeding.
Fixed by modifying the WAL RecoveryLogReader to handle failed file markers in &lt;a href=&quot;https://github.com/apache/accumulo/issues/1048&quot;&gt;#961&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Improve performance of serializing mutations to a WAL by avoiding frequent synchronization. &lt;a href=&quot;https://github.com/apache/accumulo/issues/669&quot;&gt;#669&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;multiple-fixes-for-compaction-issues&quot;&gt;Multiple Fixes for Compaction Issues&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Stop locking during compaction.  Compactions acquired the tablet lock between each
key value. This created unnecessary contention with other operations like scan and
bulk imports.  The synchronization was removed &lt;a href=&quot;https://github.com/apache/accumulo/issues/1032&quot;&gt;#1031&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Only re-queue compaction when there is activity. &lt;a href=&quot;https://github.com/apache/accumulo/issues/759&quot;&gt;#759&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fix-arrayoutofbounds-error-when-new-files-are-created-affects-all-previous-versions&quot;&gt;Fix ArrayOutOfBounds error when new files are created (affects all previous versions)&lt;/h3&gt;

&lt;p&gt;If the 7 digit base 36 number used to name files attempted to go to 8 digits,
then compactions would fail.  This was fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/562&quot;&gt;#562&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;updated-master-metrics-to-include-fate-metrics&quot;&gt;Updated Master Metrics to include FATE metrics.&lt;/h3&gt;

&lt;p&gt;Added master metrics to provide a snapshot of current FATE operations.  The metrics added:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the number of current FATE transactions in progress,&lt;/li&gt;
  &lt;li&gt;the count of child operations that have occurred on the zookeeper FATE node&lt;/li&gt;
  &lt;li&gt;a count of zookeeper connection errors when the snapshot is taken.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The number of child operations provides a light-weight surrogate for FATE transaction
progression between snapshots. The metrics are controlled with the following properties:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;master.fate.metrics.enabled - default to &lt;em&gt;false&lt;/em&gt; preserve current metric reporting&lt;/li&gt;
  &lt;li&gt;master.fate.metrics.min.update.interval - default to &lt;em&gt;60s&lt;/em&gt; - there is a hard limit of 10s.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When enabled, the metrics are published to JMX and can optionally be configured using standard
hadoop metrics2 configuration files.&lt;/p&gt;

&lt;h3 id=&quot;fixed-issues-with-native-maps-with-libstdc-82-and-higher&quot;&gt;Fixed issues with Native Maps with libstdc++ 8.2 and higher&lt;/h3&gt;

&lt;p&gt;Versions of libstdc++ 8.2 and higher triggered errors within within the native map code.
This release fixes issues &lt;a href=&quot;https://github.com/apache/accumulo/issues/767&quot;&gt;#767&lt;/a&gt;, &lt;a href=&quot;https://github.com/apache/accumulo/issues/769&quot;&gt;#769&lt;/a&gt;, &lt;a href=&quot;https://github.com/apache/accumulo/issues/1064&quot;&gt;#1064 &lt;/a&gt;, and &lt;a href=&quot;https://github.com/apache/accumulo/issues/1070&quot;&gt;#1070 &lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;fixed-splitting-tablets-with-files-and-no-data&quot;&gt;Fixed splitting tablets with files and no data&lt;/h3&gt;

&lt;p&gt;The split code assumed that if a tablet had files that it had data in
those files.  There are some edge case where this is not true.  Updated
the split code to handle this &lt;a href=&quot;https://github.com/apache/accumulo/issues/999&quot;&gt;#998&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;log-when-a-scan-waits-a-long-time-for-files&quot;&gt;Log when a scan waits a long time for files.&lt;/h3&gt;

&lt;p&gt;Accumulo has a configurable limit on the max number of files open in a
tserver for all scans.  When too many files are open, scans must wait.
In &lt;a href=&quot;https://github.com/apache/accumulo/issues/978&quot;&gt;#978&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/981&quot;&gt;#981&lt;/a&gt; scans that wait too long for files now log a message.&lt;/p&gt;

&lt;h3 id=&quot;fixed-race-condition-in-table-existence-check&quot;&gt;Fixed race condition in table existence check.&lt;/h3&gt;

&lt;p&gt;The Accumulo client code that checks if tables exists had a race
condition.  The race was fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/768&quot;&gt;#768&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/973&quot;&gt;#973&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;support-running-mini-accumulo-using-java-11&quot;&gt;Support running Mini Accumulo using Java 11&lt;/h3&gt;

&lt;p&gt;Mini Accumulo made some assumptions about classloaders that were no
longer true in Java 11.  This caused Mini to fail in Java 11.  In
&lt;a href=&quot;https://github.com/apache/accumulo/issues/924&quot;&gt;#924&lt;/a&gt; Mini was updated to work with Java 11, while still working
with Java 7 and 8.&lt;/p&gt;

&lt;h3 id=&quot;fixed-issue-with-improperly-configured-snappy&quot;&gt;Fixed issue with improperly configured Snappy&lt;/h3&gt;

&lt;p&gt;If snappy was configured and the snappy libraries were not available then minor
compactions could hang forever.  In &lt;a href=&quot;https://github.com/apache/accumulo/issues/920&quot;&gt;#920&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/925&quot;&gt;#925&lt;/a&gt; this was fixed and minor
compactions will proceed when a different compression is configured.&lt;/p&gt;

&lt;h3 id=&quot;handle-bad-locality-group-config&quot;&gt;Handle bad locality group config.&lt;/h3&gt;

&lt;p&gt;Improperly configured locality groups could cause a tablet to become
inoperative.  This was fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/819&quot;&gt;#819&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/840&quot;&gt;#840&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;fixed-bulk-import-race-condition&quot;&gt;Fixed bulk import race condition.&lt;/h3&gt;

&lt;p&gt;There was a race condition in bulk import that could result in files
being imported after a bulk import transaction had completed.  In the
worst case these files were already compacted and garbage collected.
This would cause a tablet to have a reference to a file that did not
exists.  No data would have been lost, but it would cause scans to fail.
The race was fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/800&quot;&gt;#800&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/837&quot;&gt;#837&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;fixed-issue-with-hostregextableloadbalancer&quot;&gt;Fixed issue with HostRegexTableLoadBalancer&lt;/h3&gt;

&lt;p&gt;This addresses an issue when using the HostRegexTableLoadBalancer
when the default pool is empty. The load balancer will not assign the tablets at all.
Here, we select a random pool to assign the tablets to. This behavior is on by
default in the HostRegexTableLoadBalancer but can be disabled via
HostRegexTableLoadBalancer configuration setting
 &lt;em&gt;table.custom.balancer.host.regex.HostTableLoadBalancer.ALL&lt;/em&gt;
 Fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/691&quot;&gt;#691&lt;/a&gt; - backported to 1.9 in &lt;a href=&quot;https://github.com/apache/accumulo/issues/710&quot;&gt;#710&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;update-to-libthrift-version&quot;&gt;Update to libthrift version&lt;/h3&gt;

&lt;p&gt;The packaged, binary  tarball contains updated version of libthrift to version 0.9.3-1 to
address thrift CVE. Issue &lt;a href=&quot;https://github.com/apache/accumulo/issues/1029&quot;&gt;#1029&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;useful-links&quot;&gt;Useful links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lists.apache.org/thread.html/62a490ee3005ef2ec1f3865f6a9539efc082abc49c90892b49005eed@%3Cdev.accumulo.apache.org%3E&quot;&gt;Release VOTE email thread&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/compare/rel/1.9.2...apache:rel/1.9.3&quot;&gt;All Changes since 1.9.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues?q=project%3Aapache%2Faccumulo%2F7&quot;&gt;GitHub&lt;/a&gt; - List of issues tracked on GitHub corresponding to this release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/release/accumulo-1.9.2/&quot;&gt;1.9.2 release notes&lt;/a&gt; - Release notes showing changes in the previous release&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upgrading&quot;&gt;Upgrading&lt;/h2&gt;

&lt;p&gt;View the &lt;a href=&quot;/docs/2.x/administration/upgrading&quot;&gt;Upgrading Accumulo documentation&lt;/a&gt; for guidance.&lt;/p&gt;

</description>
        <pubDate>Wed, 10 Apr 2019 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/release/accumulo-1.9.3/</link>
        <guid isPermaLink="true">https://accumulo.apache.org/release/accumulo-1.9.3/</guid>
        
        
        <category>release</category>
        
      </item>
    
      <item>
        <title>NoSQL Day 2019</title>
        <description>&lt;p&gt;On May 21st in Washington, DC, there will be a one-day community event for Apache Accumulo,
HBase, and Phoenix called &lt;a href=&quot;https://dataworkssummit.com/nosql-day-2019/&quot;&gt;NoSQL Day&lt;/a&gt;. We hope that these three Apache communities can come together to share
stories from the field and learn from one another. This event is being offered by the
DataWorks Summit organization, prior to their DataWorks Summit event May 20th through 23rd.&lt;/p&gt;

&lt;p&gt;At this time, we are looking for speakers, attendees, and sponsors for the event. For
speakers, we hope to see a wide breadth of subjects and focus, anything from performance,
scaling, real-life applications, dev-ops, or best-practices. All speakers are welcome!
Abstracts can be submitted &lt;a href=&quot;https://dataworkssummit.com/abstracts/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For attendees, we want to get the best and brightest from each of the respective communities
because the organizers believe we have much to learn from from each other. We’ve tried to
keep costs down to make this approachable for all.&lt;/p&gt;

&lt;p&gt;Finally, sponsors are the major enabler to provide events like these at low-costs
to attendees. If you are interested in a corporate sponsorship, please feel free to contact
&lt;a href=&quot;mailto:elserj@apache.org&quot;&gt;Josh Elser&lt;/a&gt; for more information.&lt;/p&gt;

</description>
        <pubDate>Thu, 28 Feb 2019 00:00:00 -0500</pubDate>
        <link>https://accumulo.apache.org/blog/2019/02/28/nosql-day.html</link>
        <guid isPermaLink="true">https://accumulo.apache.org/blog/2019/02/28/nosql-day.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Apache Accumulo 2.0.0-alpha-2</title>
        <description>&lt;p&gt;Apache Accumulo 2.0.0-alpha-2 contains numerous changes since the alpha-2. This
alpha release is a preview of features coming in 2.0.0. It is being made
available for preview, testing, and evaluation of those upcoming features, but
is &lt;em&gt;not yet suitable for production use&lt;/em&gt;. API, packaging, and other changes may
still occur before a final 2.0.0 release.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/docs/2.x/&quot;&gt;User Manual&lt;/a&gt; - In-depth developer and administrator documentation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/docs/2.x/apidocs/&quot;&gt;Javadocs&lt;/a&gt; - Accumulo 2.0 API (subject to change)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notable-changes&quot;&gt;Notable Changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Please see the &lt;a href=&quot;/release/accumulo-2.0.0&quot;&gt;draft release notes for 2.0.0&lt;/a&gt; for a list of the
changes coming in 2.0.0, many of which are either complete, or nearly
complete in this alpha release.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;since-200-alpha-1&quot;&gt;Since 2.0.0-alpha-1&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;New Map Reduce API &lt;a href=&quot;https://github.com/apache/accumulo/issues/743&quot;&gt;#743 &lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/751&quot;&gt;#751 &lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/753&quot;&gt;#753 &lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/803&quot;&gt;#803 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Deprecated existing map reduce API &lt;a href=&quot;https://github.com/apache/accumulo/commit/2465562cd088b126bfb17523c33c8acd0a48309f&quot;&gt;2465562&lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/804&quot;&gt;#804 &lt;/a&gt;  &lt;a href=&quot;https://github.com/apache/accumulo/issues/892&quot;&gt;#892 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Added ability to create scanners with default auths &lt;a href=&quot;https://github.com/apache/accumulo/issues/744&quot;&gt;#744 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Updated AccumuloClient builder API &lt;a href=&quot;https://github.com/apache/accumulo/issues/792&quot;&gt;#792 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;AccumuloClient was made Closeable &lt;a href=&quot;https://github.com/apache/accumulo/issues/718&quot;&gt;#718 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Scanners close server side sessions on close &lt;a href=&quot;https://github.com/apache/accumulo/issues/813&quot;&gt;#813 &lt;/a&gt; &lt;a href=&quot;https://github.com/apache/accumulo/issues/905&quot;&gt;#905 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 31 Jan 2019 00:00:00 -0500</pubDate>
        <link>https://accumulo.apache.org/release/accumulo-2.0.0-alpha-2/</link>
        <guid isPermaLink="true">https://accumulo.apache.org/release/accumulo-2.0.0-alpha-2/</guid>
        
        
        <category>release</category>
        
      </item>
    
      <item>
        <title>Apache Accumulo 2.0.0-alpha-1</title>
        <description>&lt;p&gt;Apache Accumulo 2.0.0-alpha-1 contains numerous changes since the 1.9. This
alpha release is a preview of features coming in 2.0.0. It is being made
available for preview, testing, and evaluation of those upcoming features, but
is &lt;em&gt;not yet suitable for production use&lt;/em&gt;. API, packaging, and other changes may
still occur before a final 2.0.0 release.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/docs/2.x/&quot;&gt;User Manual&lt;/a&gt; - In-depth developer and administrator documentation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/docs/2.x/apidocs/&quot;&gt;Javadocs&lt;/a&gt; - Accumulo 2.0 API (subject to change)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notable-changes&quot;&gt;Notable Changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Please see the &lt;a href=&quot;/release/accumulo-2.0.0&quot;&gt;draft release notes for 2.0.0&lt;/a&gt; for a list of the
changes coming in 2.0.0, many of which are either complete, or nearly
complete in this alpha release.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 14 Oct 2018 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/release/accumulo-2.0.0-alpha-1/</link>
        <guid isPermaLink="true">https://accumulo.apache.org/release/accumulo-2.0.0-alpha-1/</guid>
        
        
        <category>release</category>
        
      </item>
    
      <item>
        <title>Apache Accumulo 1.9.2</title>
        <description>&lt;p&gt;Apache Accumulo 1.9.2 contains fixes for critical write-ahead log bugs.
Users of any previous version of 1.8 or 1.9 are encouraged to upgrade
immediately to avoid those issues.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/accumulo_user_manual.html&quot;&gt;User Manual&lt;/a&gt; - In-depth developer and administrator documentation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/apidocs/&quot;&gt;Javadocs&lt;/a&gt; - Accumulo 1.9 API&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/examples/&quot;&gt;Examples&lt;/a&gt; - Code with corresponding readme files that give step by
step instructions for running example code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notable-changes&quot;&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id=&quot;fixes-for-critical-wal-bugs-affects-versions-180-191&quot;&gt;Fixes for Critical WAL Bugs (affects versions 1.8.0-1.9.1)&lt;/h3&gt;

&lt;p&gt;Multiple bugs were fixed in 1.9.2 which affects the behavior of the write-ahead
log mechanism. These vary in significance, ranging from moderate to critical.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/537&quot;&gt;#537&lt;/a&gt; - (Critical) Since 1.8.0, a bug existed which could cause some
write-ahead logs to be removed (garbage collected) before Accumulo was
finished with them. These removed logs could have contained important state
tracking information.  Without the state contained in these logs, some data
in the remaining logs could have been replayed into a table when not needed.
This could have reintroduced deleted data, or introduced duplicate data
(which can interfere with combiners).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/538&quot;&gt;#538&lt;/a&gt; - (Moderate) A bug was introduced in 1.9.1 which resulted in some
false positive IllegalStateExceptions to occur, preventing log recovery.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/539&quot;&gt;#539&lt;/a&gt; - (Moderate) Since 1.8.0, a race condition existed which could cause a log
file which contains data to be recovered to not be recorded, thus making it
invisible to recovery, if a tserver died within a very small window.  &lt;a href=&quot;https://github.com/apache/accumulo/issues/559&quot;&gt;#559&lt;/a&gt; 
 fixes this issue and may also fix a 1.9.1 deadlock caused by the fix for &lt;a href=&quot;https://github.com/apache/accumulo/issues/441&quot;&gt;#441&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if you primarily use bulk ingest, Accumulo’s own metadata tables can be
affected by these bugs, causing unexpected behavior after an otherwise routine
and recoverable server failure. As such, these bugs should be a concern to all
users.&lt;/p&gt;

&lt;h3 id=&quot;fixes-for-concurrency-bugs-gathering-table-information-affects-180-191&quot;&gt;Fixes for concurrency bugs gathering table information (affects 1.8.0-1.9.1)&lt;/h3&gt;

&lt;p&gt;Bugs were found with the &lt;code class=&quot;highlighter-rouge&quot;&gt;master.status.threadpool.size&lt;/code&gt; property. If this
property were set to a value other than &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;, it could cause 100% CPU, hanging,
or &lt;code class=&quot;highlighter-rouge&quot;&gt;ConcurrentModificationException&lt;/code&gt;s.&lt;/p&gt;

&lt;p&gt;These bugs were fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/546&quot;&gt;#546&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;caching-of-file-lengths&quot;&gt;Caching of file lengths&lt;/h3&gt;

&lt;p&gt;RFiles stores metadata at the end of file. When opening a rfile Accumulo
seeks to the end and reads metadata.  To do this seek the file length is needed. 
Before opening a file its length is requested from the namenode.  This can
add more load to a busy namenode.  To alleviate this, a small cache of file lengths was
added in &lt;a href=&quot;https://github.com/apache/accumulo/issues/467&quot;&gt;#467&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;monitor-time-unit-bug&quot;&gt;Monitor time unit bug&lt;/h3&gt;

&lt;p&gt;A bug was found in the monitor which displayed time durations (for example,
those pertaining to bulk imports) in incorrect time units.&lt;/p&gt;

&lt;p&gt;This bug was fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/553&quot;&gt;#553&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;other-changes&quot;&gt;Other Changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues?q=project%3Aapache%2Faccumulo%2F6&quot;&gt;GitHub&lt;/a&gt; - List of issues tracked on GitHub corresponding to this release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/release/accumulo-1.9.1/&quot;&gt;1.9.1 release notes&lt;/a&gt; - Release notes showing changes in the previous release&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upgrading&quot;&gt;Upgrading&lt;/h2&gt;

&lt;p&gt;View the &lt;a href=&quot;/docs/2.x/administration/upgrading&quot;&gt;Upgrading Accumulo documentation&lt;/a&gt; for guidance.&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;All ITs passed with Hadoop 3.0.0 (hadoop.profile=3)&lt;/li&gt;
  &lt;li&gt;All ITs passed with Hadoop 2.6.4 (hadoop.profile=2)&lt;/li&gt;
  &lt;li&gt;Ran 3 continuous ingesters successfully for 24 hours on a 10 node cluster
with agitation and pausing. Verification for all 3 tests was successful.&lt;/li&gt;
  &lt;li&gt;Ran continuous ingest for 24 hours and verified without agitation on a 10
node cluster.&lt;/li&gt;
  &lt;li&gt;Tested &lt;a href=&quot;https://fluo.apache.org&quot;&gt;Apache Fluo&lt;/a&gt; build and ITs passed against this version.&lt;/li&gt;
  &lt;li&gt;Ran a single-node cluster with &lt;a href=&quot;https://github.com/apache/fluo-uno&quot;&gt;Uno&lt;/a&gt; and created a table, ingested data,
flushed, compacted, scanned, and deleted the table.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 19 Jul 2018 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/release/accumulo-1.9.2/</link>
        <guid isPermaLink="true">https://accumulo.apache.org/release/accumulo-1.9.2/</guid>
        
        
        <category>release</category>
        
      </item>
    
      <item>
        <title>Accumulo Summit is on October 15th!</title>
        <description>&lt;p&gt;The &lt;a href=&quot;http://accumulosummit.com/&quot;&gt;Fifth Annual Accumulo Summit&lt;/a&gt; will be held on October 15, 2018 at the &lt;a href=&quot;http://accumulosummit.com/about/venue/&quot;&gt;Sheraton Columbia Town Center Hotel&lt;/a&gt; in Columbia, MD.&lt;/p&gt;

&lt;p&gt;This day-long event offers a unique opportunity for attendees to get introduced to Apache Accumulo, sharpen their skillsets, and connect with leading Accumulo users and developers.&lt;/p&gt;

&lt;p&gt;Have a great idea you’d like to share?  Engineers, architects, and business leaders are encouraged to share their experiences or present a topic that would be of interest to the Accumulo community.  &lt;a href=&quot;http://accumulosummit.com/program/submit-talk/&quot;&gt;Talks can be submitted &lt;/a&gt; through August 1st.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://accumulosummit.com/register/&quot;&gt;Early bird registration is now open&lt;/a&gt;!  Sign up before September 1st to save $50 off the regular admission price.&lt;/p&gt;

</description>
        <pubDate>Thu, 05 Jul 2018 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/blog/2018/07/05/accumulo-summit.html</link>
        <guid isPermaLink="true">https://accumulo.apache.org/blog/2018/07/05/accumulo-summit.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Apache Accumulo 1.9.1</title>
        <description>&lt;p&gt;Apache Accumulo 1.9.1 contains bug fixes for a critical data loss bug. Users of
1.8.0, 1.8.1, or 1.9.0 are encouraged to upgrade immediately.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/accumulo_user_manual.html&quot;&gt;User Manual&lt;/a&gt; - In-depth developer and administrator documentation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/apidocs/&quot;&gt;Javadocs&lt;/a&gt; - Accumulo 1.9 API&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/examples/&quot;&gt;Examples&lt;/a&gt; - Code with corresponding readme files that give step by
step instructions for running example code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notable-changes&quot;&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id=&quot;fixes-for-critical-wal-data-loss-bugs-affects-versions-180-190&quot;&gt;Fixes for Critical WAL Data Loss Bugs (affects versions 1.8.0-1.9.0)&lt;/h3&gt;

&lt;p&gt;Accumulo 1.9.1 contains multiple bug fixes for write ahead log recovery. Write
ahead log recovery is the process of restoring data that was in memory when a
tablet server died. These bugs could lead to data loss and are present in
1.8.0, 1.8.1, and 1.9.0. Because the bugs can negatively impact Accumulo’s
metadata table, &lt;strong&gt;even users that mainly use bulk import may be affected&lt;/strong&gt;. It
is &lt;strong&gt;strongly&lt;/strong&gt; recommended that anyone using 1.8.0 or greater upgrade
immediately. For more information see issues &lt;a href=&quot;https://github.com/apache/accumulo/issues/441&quot;&gt;#441&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/449&quot;&gt;#449&lt;/a&gt;. These issues
were fixed in pull request &lt;a href=&quot;https://github.com/apache/accumulo/issues/443&quot;&gt;#443&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/accumulo/issues/458&quot;&gt;#458&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only users who would not be affected by these bugs would be users already
running Accumulo without the recommended write-ahead logs enabled at all
(durability: none), including for the metadata tables. Such users are already
risking data loss when a server fails, but are not subject to any additional
risk from these bugs, which occur during automated recovery from such failures.&lt;/p&gt;

&lt;h2 id=&quot;some-wal-recovery-files-were-not-being-properly-cleaned-up&quot;&gt;Some WAL recovery files were not being properly cleaned up&lt;/h2&gt;

&lt;p&gt;A less serious bug than the above critical bugs was discovered and fixed,
pertaining to write-ahead log recovery. This bug involved recovery files not
being removed properly when no longer required and was fixed in &lt;a href=&quot;https://github.com/apache/accumulo/issues/432&quot;&gt;#432&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;other-changes&quot;&gt;Other Changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues?q=project%3Aapache%2Faccumulo%2F5&quot;&gt;GitHub&lt;/a&gt; - List of issues tracked on GitHub corresponding to this release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/release/accumulo-1.9.0/&quot;&gt;1.9.0 release notes&lt;/a&gt; - Release notes showing changes in the previous release, 1.9.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upgrading&quot;&gt;Upgrading&lt;/h2&gt;

&lt;p&gt;View the &lt;a href=&quot;/docs/2.x/administration/upgrading&quot;&gt;Upgrading Accumulo documentation&lt;/a&gt; for guidance.&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;p&gt;Continuous ingest with agitation and all integration test were run against this
version. Continuous ingest was run with 9 nodes for 24 hours followed by a
successful verification. The integration tests were run against both Hadoop
2.6.4 and Hadoop 3.0.0.&lt;/p&gt;

</description>
        <pubDate>Mon, 14 May 2018 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/release/accumulo-1.9.1/</link>
        <guid isPermaLink="true">https://accumulo.apache.org/release/accumulo-1.9.1/</guid>
        
        
        <category>release</category>
        
      </item>
    
      <item>
        <title>Apache Accumulo 1.9.0</title>
        <description>&lt;p&gt;Apache Accumulo 1.9.0 is a minor release on the 1.x branch. This release would
be considered a maintenance release on 1.8 branch except there are some API
additions which resulted in a new minor release. Users of 1.8.x versions of
Accumulo should upgrade to 1.9.0. There will be no more bug fix releases on the
1.8 branch. This release contains changes for nearly a hundred issues. See
&lt;a href=&quot;https://github.com/apache/accumulo/issues?q=project%3Aapache%2Faccumulo%2F4&quot;&gt;GitHub&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12312121&amp;amp;version=12339245&quot;&gt;JIRA&lt;/a&gt; for a list of changes.&lt;/p&gt;

&lt;p&gt;Below are resources for this release:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/accumulo_user_manual.html&quot;&gt;User Manual&lt;/a&gt; - In-depth developer and administrator documentation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/apidocs/&quot;&gt;Javadocs&lt;/a&gt; - Accumulo 1.9.0 API&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/1.9/examples/&quot;&gt;Examples&lt;/a&gt; - Code with corresponding readme files that give step by
step instructions for running example code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notable-changes&quot;&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id=&quot;deprecated-clientconfiguration-api-using-commons-config&quot;&gt;Deprecated ClientConfiguration API using commons config&lt;/h3&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4611&quot;&gt;ACCUMULO-4611&lt;/a&gt;, public API in ClientConfiguration using commons config
types was deprecated to better support Hadoop 3 in the future. New methods were
added to replace these methods which cause this release to be a 1.9.0 release.
These changes allow removal of commons config from Accumulo’s API in 2.0.0.  If
using ClientConfiguration, then switching from existing constructors to the new
static methods &lt;a href=&quot;/1.9/apidocs/org/apache/accumulo/core/client/ClientConfiguration.html#create--&quot;&gt;create()&lt;/a&gt;, &lt;a href=&quot;/1.9/apidocs/org/apache/accumulo/core/client/ClientConfiguration.html#fromFile-java.io.File-&quot;&gt;fromFile()&lt;/a&gt;, or &lt;a href=&quot;/1.9/apidocs/org/apache/accumulo/core/client/ClientConfiguration.html#fromMap-java.util.Map-&quot;&gt;fromMap()&lt;/a&gt; will ensure your code
works in 2.0.0.&lt;/p&gt;

&lt;h3 id=&quot;performance-improvements&quot;&gt;Performance Improvements&lt;/h3&gt;

&lt;p&gt;Accumulo was profiled while running lots of concurrent small scans. During this
exercise these performance bugs were found and fixed: &lt;a href=&quot;https://github.com/apache/accumulo/issues/379&quot;&gt;#379&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4778&quot;&gt;ACCUMULO-4778&lt;/a&gt;,
&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4779&quot;&gt;ACCUMULO-4779&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4781&quot;&gt;ACCUMULO-4781&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4782&quot;&gt;ACCUMULO-4782&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4788&quot;&gt;ACCUMULO-4788&lt;/a&gt;,
&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4789&quot;&gt;ACCUMULO-4789&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4790&quot;&gt;ACCUMULO-4790&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4797&quot;&gt;ACCUMULO-4797&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4798&quot;&gt;ACCUMULO-4798&lt;/a&gt;,
&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4799&quot;&gt;ACCUMULO-4799&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4800&quot;&gt;ACCUMULO-4800&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4801&quot;&gt;ACCUMULO-4801&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4805&quot;&gt;ACCUMULO-4805&lt;/a&gt;, and
&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4809&quot;&gt;ACCUMULO-4809&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below are other significant performance improvements in 1.9.0:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4636&quot;&gt;ACCUMULO-4636&lt;/a&gt; - System iterator performance improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4657&quot;&gt;ACCUMULO-4657&lt;/a&gt; - Avoided expensive BulkImport logging&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4667&quot;&gt;ACCUMULO-4667&lt;/a&gt; - Avoided unnecessary recomputation in LocalityGroupIterator&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/410&quot;&gt;#410&lt;/a&gt; - Fixed inefficient auths check&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fixed-upgrade-process-to-set-version-on-all-volumes&quot;&gt;Fixed upgrade process to set version on all volumes&lt;/h3&gt;

&lt;p&gt;During upgrades, only one volume in a multiple HDFS volume was updated with the
correct version. This would cause all tablet servers to complain and ultimately
fail. &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4686&quot;&gt;ACCUMULO-4686&lt;/a&gt; fixes this by setting the version on all volumes.&lt;/p&gt;

&lt;h3 id=&quot;updated-accumulo-to-work-with-new-releases-of-guava&quot;&gt;Updated Accumulo to work with new releases of Guava&lt;/h3&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4702&quot;&gt;ACCUMULO-4702&lt;/a&gt;, dependencies on Beta-annotated Guava classes and methods
were removed. While Accumulo still includes Guava 14 in its tarball, it will
work with newer versions of Guava in client code. It has been tested to work
with Guava 23.&lt;/p&gt;

&lt;h3 id=&quot;updated-rfile-to-prevent-very-large-blocks&quot;&gt;Updated RFile to prevent very large blocks&lt;/h3&gt;

&lt;p&gt;RFiles now use windowed statistics (&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4669&quot;&gt;ACCUMULO-4669&lt;/a&gt;) to prevent very large
blocks. In 1.8.0 a bug was introduced that caused RFile data block sizes to
grow very large in the case where key sizes slowly increased.  This could lead
to degraded query performance or out of memory exceptions on tablet servers.&lt;/p&gt;

&lt;h3 id=&quot;allow-iterators-to-yield&quot;&gt;Allow iterators to yield&lt;/h3&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4643&quot;&gt;ACCUMULO-4643&lt;/a&gt; added capability for an iterator to yield control in a seek
or next call prior to finding a key/value.  Yielding avoids starvation of other
scans when iterators take a long time to return a key/value. To use this
feature, implement YieldingKeyValueIterator.&lt;/p&gt;

&lt;h3 id=&quot;disallow-dots--in-iterator-names&quot;&gt;Disallow dots (.) in iterator names&lt;/h3&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-3389&quot;&gt;ACCUMULO-3389&lt;/a&gt;, we added a check to prevent iterators from being created by
our API which contained the dot (.) character. In some cases, the presence of a
dot character could be parsed incorrectly as an iterator option rather than
part of its name. This caused unexpected problems. Iterator names are no longer
allowed to contain dots. Any user code doing that will break with an
IllegalArgumentException.&lt;/p&gt;

&lt;h3 id=&quot;various-security-related-improvements&quot;&gt;Various security-related improvements&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/417&quot;&gt;#417&lt;/a&gt; - Make TLSv1.2 the default for TLS RPC connections&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-2806&quot;&gt;ACCUMULO-2806&lt;/a&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;accumulo init&lt;/code&gt; sets the correct permissions on /accumulo
to 700&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4587&quot;&gt;ACCUMULO-4587&lt;/a&gt; - use a newer version of JQuery (3.2.1)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4660&quot;&gt;ACCUMULO-4660&lt;/a&gt; - sanitized incoming values from HTTP parameters&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4665&quot;&gt;ACCUMULO-4665&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4666&quot;&gt;ACCUMULO-4666&lt;/a&gt; - Kerberos improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4676&quot;&gt;ACCUMULO-4676&lt;/a&gt; - set the HTTPOnly flags for JSESSSIONID in monitor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-notable-changes&quot;&gt;Other Notable Changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/accumulo/issues/403&quot;&gt;#403&lt;/a&gt; - Enabled more metrics reporting&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4528&quot;&gt;ACCUMULO-4528&lt;/a&gt; - Add import/export table info to docs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4655&quot;&gt;ACCUMULO-4655&lt;/a&gt; - Added a Response Time column to the monitor&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4693&quot;&gt;ACCUMULO-4693&lt;/a&gt; - Add process name to metrics&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ACCUMULO-4721&quot;&gt;ACCUMULO-4721&lt;/a&gt; - Document rfile-info in the user manual&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upgrading&quot;&gt;Upgrading&lt;/h2&gt;

&lt;p&gt;View the &lt;a href=&quot;/docs/2.x/administration/upgrading&quot;&gt;Upgrading Accumulo documentation&lt;/a&gt; for guidance.&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;p&gt;Continuous ingest, random walk, and all integration test were run against RC1.
Randomwalk was run for 2 days with 7 walkers.  Continuous ingest was run with 9
nodes for 24 hours followed by a successful verification.&lt;/p&gt;

</description>
        <pubDate>Mon, 23 Apr 2018 00:00:00 -0400</pubDate>
        <link>https://accumulo.apache.org/release/accumulo-1.9.0/</link>
        <guid isPermaLink="true">https://accumulo.apache.org/release/accumulo-1.9.0/</guid>
        
        
        <category>release</category>
        
      </item>
    
  </channel>
</rss>
